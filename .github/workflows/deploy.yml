name: Deploy React App to GCS via JFrog

on:
  push:
    branches:
      - master  # Change if using a different branch

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'  # Caches node_modules to speed up builds

      - name: Install Dependencies
        run: npm install

      - name: Build React App
        run: npm run build

      - name: Archive Build Artifacts
        run: tar -czf build.tar.gz build/

      - name: Debug Tar File
        run: |
          echo "Checking tar file..."
          ls -lah build.tar.gz
          tar -tzf build.tar.gz || echo "⚠️ Tar file may be corrupt!"

      - name: Upload Build to JFrog Artifactory
        run: |
          set -e
          echo "Uploading build.tar.gz to JFrog..."
          curl -u "ritesh.cyberlink@gmail.com:cmVmdGtuOjAxOjE3NzQxODgzMTc6TWczSWJ0YWxsUEV6dVBycEN5VjZEeFE3ZDg1" \
               -T build.tar.gz "https://trialvape97.jfrog.io/artifactory/my-react-app-repo-generic-local/build.tar.gz"
          echo "✅ Upload complete!"

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download Build from JFrog
        run: |
          set -e
          echo "Downloading build.tar.gz from JFrog..."
          
          # Remove any existing file to avoid conflicts
          rm -f build.tar.gz
          
          curl -v -u "ritesh.cyberlink@gmail.com:cmVmdGtuOjAxOjE3NzQxODgzMTc6TWczSWJ0YWxsUEV6dVBycEN5VjZEeFE3ZDg1" \
               -o build.tar.gz "https://trialvape97.jfrog.io/artifactory/my-react-app-repo-generic-local/build.tar.gz"
          
          echo "Checking downloaded file..."
          ls -lah build.tar.gz
          file build.tar.gz

          if [ ! -s build.tar.gz ]; then
            echo "❌ ERROR: build.tar.gz is empty or corrupt!"
            exit 1
          fi

          echo "Checking tar integrity..."
          tar -tzf build.tar.gz || (echo "❌ ERROR: Tar file is corrupt!"; exit 1)

          echo "✅ Download & verification complete!"

      - name: Extract Build
        run: |
          echo "Extracting build.tar.gz..."
          tar -xzf build.tar.gz || (echo "❌ Extraction failed!"; exit 1)
          echo "✅ Extraction complete!"

      - name: Authenticate with GCP
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Upload to Google Cloud Storage (GCS)
        run: |
          set -e
          echo "Uploading build to GCS..."

          # Debug: Check if build folder exists before uploading
          ls -lah build || (echo "❌ ERROR: Build directory is missing!"; exit 1)

          # Upload the build folder to GCS
          gsutil -m rsync -r ./build gs://${{ secrets.GCS_BUCKET_NAME }}/

          echo "✅ Upload complete!"

      - name: Set Public Permissions (Optional)
        run: |
          set -e
          echo "Making GCS bucket publicly accessible..."
          gsutil iam ch allUsers:objectViewer gs://${{ secrets.GCS_BUCKET_NAME }}
          echo "✅ Public access granted!"
